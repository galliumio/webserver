<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=11
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>11</zoom_level>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>1595</w>
      <h>1573</h>
    </coordinates>
    <panel_attributes>CmdSrv::root
--
CmdSrvStartReq/ ^CmdSrvStartCfm(STATE)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>627</x>
      <y>77</y>
      <w>330</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>stopped
--
entry/ reset wsConnList and tcpConnList
CmdSrvStopReq/ ^CmdSrvStopCfm(SUCCESS)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>77</x>
      <y>561</y>
      <w>1463</w>
      <h>957</h>
    </coordinates>
    <panel_attributes>started
--
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>385</x>
      <y>121</y>
      <w>264</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>946</x>
      <y>121</y>
      <w>319</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>270.0;120.0;270.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1320</x>
      <y>484</y>
      <w>132</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>CmdSrvStopReq/ save req
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>462</x>
      <y>99</y>
      <w>132</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>CmdSrvStartReq/ save req
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>143</x>
      <y>253</y>
      <w>484</w>
      <h>209</h>
    </coordinates>
    <panel_attributes>starting
--
entry/ ^WsConnStartReq, ^TcpConnStartReq, ^TcpjsConnStartReq,
       ^CliStartReq to all conn regions,
       startingTimer.start()
exit/ startingTimer.stop()
       
WsConnStarCfm, TcpConnStartCfm,
TcpjsConnStartCfm, CliConnStartCfm[matchSeq(e)]
/ if (status == FAIL) ^^Fail
  else 
    if (clearSeq(e)) ^^Done
    add conn to free list
  
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>968</x>
      <y>253</y>
      <w>561</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>stopping
--
entry/ ^WsConnStopReq, ^TcpConnStopReq, ^TcpjsConnStopReq,
       ^CliConnStopReq to all wsConns,
       stoppingTimer.start()
exit/ recall(), stoppingTimer.stop()

CmdSrvStopReq/ defer(e)       
WsConnStopCfm, TcpConnStopCfm, 
TcpjsConnStopCfm, CliConnStopCfm[matchSeq(e)]
/ if (status == FAIL) ^^Fail
  else if (clearSeq(e)) ^^Done
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1232</x>
      <y>462</y>
      <w>385</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>330.0;60.0;10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>385</x>
      <y>451</y>
      <w>33</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>407</x>
      <y>484</y>
      <w>209</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>Done
/ ^CmdSrvStartCfm(SUCCESS)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>616</x>
      <y>341</y>
      <w>374</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;320.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>693</x>
      <y>308</y>
      <w>198</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>Fail, StartingTimer
/ ^CmdSrvStartCfm(error)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1243</x>
      <y>176</y>
      <w>187</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>Done/ ^CmdSrvStopCfm(SUCCESS)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>748</x>
      <y>407</y>
      <w>22</w>
      <h>22</h>
    </coordinates>
    <panel_attributes>type=final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>759</x>
      <y>407</y>
      <w>231</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>190.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>803</x>
      <y>374</y>
      <w>154</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>Fail, StoppingTimer
/ assert
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>715</x>
      <y>33</y>
      <w>99</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;
group=1</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>704</x>
      <y>33</y>
      <w>22</w>
      <h>22</h>
    </coordinates>
    <panel_attributes>type=initial
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>121</x>
      <y>660</y>
      <w>627</w>
      <h>803</h>
    </coordinates>
    <panel_attributes>conn_root
--
entry/ create http server and express server,
       create websocket server, tcp server, tcpjs server and cli server
exit/

WsConnected(ws)
/ if (wsConn free list empty) ws.close()
  else
    get wsConn from free list, save wsConn to busy list,
    ^WsConnUseReq(ws) to wsConn    
WsConnDoneInd
/ move wsConn from busy to free list,
  if (delete connSts from nodeMap)
    forAllNodes(sendIndMsg(SrvConnStsIndMsg))

TcpConnected(sock)
/ if (tcpConn free list empty) sock.close()
  else
    get tcpConn from free list, save tcpConn to busy list,
    ^TcpConnUseReq(sock) to tcpConn
TcpConnDoneInd
/ move tcpConn from busy to free list,
  if (delete connSts from nodeMap)
    forAllNodes(sendIndMsg(SrvConnStsIndMsg))

TcpjsConnected(sock)
/ if (tcpjsConn free list empty) sock.close()
  else
    get tcpjsConn from free list, save tcpjsConn to busy list,
    ^TcpjsConnUseReq(sock) to tcpjsConn
TcpjsConnDoneInd
/ move tcpjsConn from busy to free list,
  if (delete connSts from nodeMap)
    forAllNodes(sendIndMsg(SrvConnStsIndMsg))

CliConnected(sock)
/ if (cliConn free list empty) sock.close()
  else
    get cliConn from free list, save cliConn to busy list,
    ^CliConnUseReq(sock) to cliConn
CliConnDoneInd
/ move cliConn from busy to free list,
  if (delete connSts from nodeMap)
    forAllNodes(sendIndMsg(SrvConnStsIndMsg))

AuthSuccess(connSts)
/ add connSts to nodeMap,
  forAllNodes(sendIndMsg(SrvConnStsIndMsg))

WsConnMsgInd(msg), TcpConnMsgInd(msg), TcpjsConnMsgInd(msg), CliConnMsgInd(msg),
/ routeMsg()
      



valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>792</x>
      <y>572</y>
      <w>33</w>
      <h>968</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;860.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>264</x>
      <y>605</y>
      <w>22</w>
      <h>22</h>
    </coordinates>
    <panel_attributes>type=initial
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>275</x>
      <y>605</y>
      <w>99</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;
group=2</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>858</x>
      <y>660</y>
      <w>627</w>
      <h>583</h>
    </coordinates>
    <panel_attributes>auth_root
--
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1012</x>
      <y>605</y>
      <w>99</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;
group=3</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1001</x>
      <y>605</y>
      <w>22</w>
      <h>22</h>
    </coordinates>
    <panel_attributes>type=initial
group=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>913</x>
      <y>737</y>
      <w>528</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>auth_idle
--

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>913</x>
      <y>924</y>
      <w>528</w>
      <h>253</h>
    </coordinates>
    <panel_attributes>auth_busy
--
entry
/ result = checkCredential(req.username, req.password)
  if (result)
    nodeId = req.nodeId
    if ((req.nodeId == UNDEF) || nodeId in nodeMap)
      assign unique nodeId 
    ^^AuthSuccess(new ConnSts)
    ^CmdSrvAuthCfm(SUCCESS, nodeId)
  else
    ^CmdSrvAuthCfm(FAIL),
  ^^AuthDone
exit/ recall()
CmdSrvAuthReq/ defer()
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1232</x>
      <y>825</y>
      <w>33</w>
      <h>121</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1254</x>
      <y>858</y>
      <w>132</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>CmdSrvAuthReq
/ save req
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1078</x>
      <y>825</y>
      <w>33</w>
      <h>121</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1012</x>
      <y>869</y>
      <w>88</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>AuthDone
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1188</x>
      <y>1078</y>
      <w>154</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>Note..
Placeholder for asynchronous authentication
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>594</x>
      <y>605</y>
      <w>143</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>Connection Region
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1276</x>
      <y>605</y>
      <w>176</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>Authentication Region
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>495</x>
      <y>1254</y>
      <w>231</w>
      <h>99</h>
    </coordinates>
    <panel_attributes>routeMsg() sends one or more
of these events to conn hsm's: 
	WsConnMsgReq,
	TcpConnMsgReq,
	TcpjsConnMsgReq,
	CliConnMsgReq</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
