<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <help_text>// Uncomment the following line to change the fontsize and font:
fontsize=11
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>150</x>
      <y>0</y>
      <w>880</w>
      <h>875</h>
    </coordinates>
    <panel_attributes>TcpConn::root
--
TcpConnStartReq/ ^TcpConnStartCfm(STATE)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>480</x>
      <y>35</y>
      <w>150</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>stopped
--
TcpConnStopReq/ ^TcpConnStopCfm(SUCCESS)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>185</x>
      <y>255</y>
      <w>810</w>
      <h>595</h>
    </coordinates>
    <panel_attributes>started
--


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>380</x>
      <y>55</y>
      <w>110</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>200.0;10.0;10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>625</x>
      <y>55</y>
      <w>110</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>200.0;120.0;200.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>765</x>
      <y>215</y>
      <w>60</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>TcpConnStopReq/ save req
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>405</x>
      <y>45</y>
      <w>60</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>TcpConnStartReq/ save req
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>300</x>
      <y>115</y>
      <w>180</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>starting
--
entry/ ^^Done, startingTimer.start()
exit/ startingTimer.stop()
       

  
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>635</x>
      <y>115</y>
      <w>180</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>stopping
--
entry/ ^^Done
       stoppingTimer.start()
exit/ recall(), stoppingTimer.stop()

TcpConnStopReq/ defer(e)       
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>720</x>
      <y>195</y>
      <w>320</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>620.0;70.0;10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>375</x>
      <y>195</y>
      <w>15</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>380</x>
      <y>215</y>
      <w>105</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>Done
/ ^TcpConnStartCfm(SUCCESS)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>725</x>
      <y>80</y>
      <w>85</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>Done/ ^TcpConnStopCfm(SUCCESS)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>465</x>
      <y>295</y>
      <w>180</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>idle
--
entry/ sock = null, user = null,
       username = null
  
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>220</x>
      <y>400</y>
      <w>755</w>
      <h>425</h>
    </coordinates>
    <panel_attributes>connected
--
entry/ error = null,
       sock.on('data', ^SockOnData(buffer),
       sock.on('close', ^SockOnClose),
       sock.on("error", ^SockOnError)
SockOnError/ closeSock()
  
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>475</x>
      <y>155</y>
      <w>170</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;320.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>510</x>
      <y>140</y>
      <w>90</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>Fail, StartingTimer
/ ^TcpConnStartCfm(error)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>535</x>
      <y>185</y>
      <w>10</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>type=final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>540</x>
      <y>185</y>
      <w>105</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>190.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>560</x>
      <y>170</y>
      <w>70</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>Fail, StoppingTimer
/ assert
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>15</y>
      <w>45</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;
group=3</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>515</x>
      <y>15</y>
      <w>10</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>type=initial
group=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>275</y>
      <w>45</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;
group=4</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>515</x>
      <y>275</y>
      <w>10</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>type=initial
group=4</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>495</x>
      <y>340</y>
      <w>15</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>415</x>
      <y>360</y>
      <w>95</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>TcpConnUseReq(sock)
/ save sock, user,
  ^TcpConnUseCfm
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>315</y>
      <w>50</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>80.0;170.0;80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>650</x>
      <y>300</y>
      <w>150</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>SockOnClose
/ ^TcpConnDoneInd(error || NETWORK) to user
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>315</x>
      <y>510</y>
      <w>245</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>unauth
--
entry/ authTimer.start()
exit/ authTimer.stop()
AuthTimer/ error = TIMEOUT, closeSock()
SockOnMessage[SrvAuthReqMsg(credential)]
/ save reqMsg, ^CmdSrvAuthReq(credential)
CmdSrvAuthCfm
/ if (success) 
    save reqMsg.username, save assigned nodeId,
    sendCfmMsg(SrvAuthCfmMsg(SUCCESS)), ^^AuthDone,
  else
    sendCfmMsg(SrvAuthCfmMsg(FAIL)),  
    error = e.error,closeSock()

  
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>425</x>
      <y>490</y>
      <w>10</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>type=initial
group=5</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>430</x>
      <y>490</y>
      <w>45</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;
group=5</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>265</x>
      <y>630</y>
      <w>345</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>authenticated
--
entry/ pingWaitTimer.start(periodic),
       pingCnt = 0
exit/ pingWaitTimer.stop()
PingWaitTimer[pingCnt&gt;0]/ pingCnt = 0
PingWaitTimer[pingCnt==0]/ error = TIMEOUT, closeSock()

TcpConnMsgReq(msg)/ postMsg(msg)
SockOnMessage(msg)/ if (msg == SrvPingReqMsg)
                      pingCnt++, sendCfmMsg(SrvPingCfmMsg)
                    else ^TcpConnMsgInd(msg) to user
  
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>425</x>
      <y>600</y>
      <w>15</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>430</x>
      <y>610</y>
      <w>45</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>AuthDone
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>645</x>
      <y>405</y>
      <w>15</w>
      <h>430</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;840.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>665</x>
      <y>430</y>
      <w>290</w>
      <h>375</h>
    </coordinates>
    <panel_attributes>msg
--
entry/ msgBuf = null, msgLen = 0, msgType = ''
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>245</x>
      <y>475</y>
      <w>385</w>
      <h>265</h>
    </coordinates>
    <panel_attributes>auth
--
    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>680</x>
      <y>575</y>
      <w>175</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>headerWait
--
entry
/ msg = new Msg
  if (msgBuf.length &gt;= msg.bufferSize())
    msg.fromBuffer()
    if (msg invalid)
      error = NETWORK, closeSock(), return
    save msgType and msgLen,
    ^^CheckMsgBody
         
SockOnData(buffer)
/ concat buffer to msgBuf,
  ^^CheckMsgHdr
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>680</x>
      <y>485</y>
      <w>175</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>msgIdle
--
SockOnData(buffer)
/ copy buffer to msgBuf
  ^^CheckMsgHdr
  
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>680</x>
      <y>690</y>
      <w>175</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>bodyWait
--
entry
/ if (msgBuf.length &gt;= msgLen)
    msg = createMessage(msgBuf, msgType, msgLen),
    if (msg) ^SocketOnMessage(msg)
    trim msgLen bytes from msgBuf,
    if (msgBuf.length &gt; 0) ^^CheckMsgHdr
    else ^^MsgDone

 SockOnData(buffer)
 / concat buffer to msgBuf,
   ^^CheckMsgBody
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>730</x>
      <y>465</y>
      <w>10</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>type=initial
group=6</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>735</x>
      <y>465</y>
      <w>45</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;
group=6</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0;70.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>850</x>
      <y>620</y>
      <w>115</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>210.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>885</x>
      <y>610</y>
      <w>45</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>CheckMsgHdr
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>850</x>
      <y>735</y>
      <w>115</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>210.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>885</x>
      <y>725</y>
      <w>50</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>CheckMsgBody
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>850</x>
      <y>515</y>
      <w>115</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>210.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>885</x>
      <y>505</y>
      <w>55</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>MsgDone
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
