{"version":3,"file":"bundle.worker.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,IAAIA,EAAE,GAAG,IAAT;AACA,IAAIC,QAAQ,GAAG,KAAf;AAEAC,gBAAgB,CAAC,SAAD,EAAY,UAAAC,KAAK,EAAI;AACjC,oBAA8CA,KAAK,CAACC,IAApD;AAAA,MAAKC,SAAL,eAAKA,SAAL;AAAA,MAAgBC,SAAhB,eAAgBA,SAAhB;AAAA,MAA2BC,UAA3B,eAA2BA,UAA3B;AAAA,MAAuCC,GAAvC,eAAuCA,GAAvC;;AACA,MAAIH,SAAS,KAAK,OAAlB,EAA2B;AACvB;AACAI,IAAAA,IAAI;AACJR,IAAAA,QAAQ,GAAGM,UAAX,CAHuB,CAIvB;;AACA,QAAIN,QAAJ,EAAc;AACVD,MAAAA,EAAE,GAAGU,WAAW,CAAC,YAAI;AAACC,QAAAA,WAAW,CAACH,GAAD,CAAX;AAAiB,OAAvB,EAAyBF,SAAzB,CAAhB;AACH,KAFD,MAEO;AACHN,MAAAA,EAAE,GAAGY,UAAU,CAAC,YAAI;AAACD,QAAAA,WAAW,CAACH,GAAD,CAAX;AAAiB,OAAvB,EAAyBF,SAAzB,CAAf;AACH;AACJ,GAVD,MAUO;AACHG,IAAAA,IAAI;AACP;AACJ,CAfe,CAAhB;;AAiBA,SAASA,IAAT,GAAgB;AACZ,MAAIT,EAAE,KAAK,IAAX,EAAiB;AACb,QAAIC,QAAJ,EAAc;AACVY,MAAAA,aAAa,CAACb,EAAD,CAAb;AACH,KAFD,MAEO;AACHc,MAAAA,YAAY,CAACd,EAAD,CAAZ;AACH;;AACDA,IAAAA,EAAE,GAAG,IAAL;AACH;AACJ,C","sources":["webpack://webapp/./src/WTimer.worker.js"],"sourcesContent":["/*******************************************************************************\n * Copyright (C) Gallium Studio LLC. All rights reserved.\n *\n * This program is open source software: you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * Alternatively, this program may be distributed and modified under the\n * terms of Gallium Studio LLC commercial licenses, which expressly supersede\n * the GNU General Public License and are specifically designed for licensees\n * interested in retaining the proprietary status of their code.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n * Contact information:\n * Website - https://www.galliumstudio.com\n * Source repository - https://github.com/galliumstudio\n * Email - admin@galliumstudio.com\n ******************************************************************************/\n\n// Timer ID for clearing it. Should be local to each worker instance.\nlet id = null\nlet periodic = false\n\naddEventListener(\"message\", event => {\n    let {operation, timeoutMs, isPeriodic, seq} = event.data\n    if (operation === 'start') {\n        //start(timeoutMs, isPeriodic, seq)\n        stop()\n        periodic = isPeriodic\n        // postMessage can only be called within addEventListener for a worker.\n        if (periodic) {\n            id = setInterval(()=>{postMessage(seq)}, timeoutMs)\n        } else {\n            id = setTimeout(()=>{postMessage(seq)}, timeoutMs)\n        }\n    } else {\n        stop()\n    }\n});\n\nfunction stop() {\n    if (id !== null) {\n        if (periodic) {\n            clearInterval(id)\n        } else {\n            clearTimeout(id)\n        }\n        id = null\n    }\n}"],"names":["id","periodic","addEventListener","event","data","operation","timeoutMs","isPeriodic","seq","stop","setInterval","postMessage","setTimeout","clearInterval","clearTimeout"],"sourceRoot":""}